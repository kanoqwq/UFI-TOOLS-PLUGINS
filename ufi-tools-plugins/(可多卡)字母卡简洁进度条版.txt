<script>
  (async () => {
    //Âç°ÁâáÈÖçÁΩÆ
    const singleCol = true //ÁßªÂä®Á´ØÔºötrueÁã¨Âç†‰∏ÄÊï¥Ë°å false‰∏∫Ê†áÂáÜÂÆΩÂ∫¶
    //‰Ω†ÊúâÂá†‰∏™Â≠óÊØçÂç°Â∞±ÂÜôÂá†‰∏™genCard
    await genCard("12345")

    async function genCard(cardNumber, name = "üÖ±Ô∏èÂ≠óÊØç") {

      const formdata = new FormData();
      formdata.append('cardNo', cardNumber);
      await fetch("/api/proxy/--http://cmp.xinghaiwaimai.com/java/front/cmpCard/cardLogin", {
        method: 'POST',
        body: formdata
      })
        .then(res => res.json())
        .then((data) => {
          if (!data.data) {
            createToast(name + data.msg, 'red')
          }
          const card = data.data.card;
          const usedData = card?.voidUsedFlow
          const totalData = card?.voidTotalFlow
          const isDisabled = !card?.statusMsg.includes('Â∑≤ÊøÄÊ¥ª')
          const op = (() => {
            switch (card?.groupOperator || 0) {
              case 1: return '‰∏≠ÂõΩÁîµ‰ø°';
              case 2: return '‰∏≠ÂõΩËÅîÈÄö';
              case 3: return '‰∏≠ÂõΩÁßªÂä®';
              default: return '‰∏≠ÂõΩÁ•ûÁßòÂç°';
            }
          })()
          const expireDate = card?.becomedueDatetime?.split('T')[0] || 'Êú™Áü•'
          const netCard = document.querySelector('.net-card');
          const el = document.createElement('div')
          const el_title = document.createElement('div')
          const mask = document.createElement('div')
          mask.style.width = "100%"
          mask.style.height = "100%"
          mask.style.backgroundColor = "rgba(0,0,0,.5)"
          mask.style.display = 'flex'
          mask.style.justifyContent = 'center'
          mask.style.alignItems = 'center'
          mask.style.position = 'absolute'
          mask.style.top = '0'
          mask.style.left = '0'
          mask.style.borderRadius = '10px'
          mask.innerHTML = isDisabled ? card?.statusMsg : ""
          el.style.margin = '4px'
          singleCol && (el.style.gridColumn = '1/-1')
          el.style.marginLeft = '0px'
          el.style.marginRight = '0px'
          el.style.position = 'relative'
          el_title.style.position = 'absolute'
          el_title.style.right = '6px'
          el_title.style.top = '6px'
          el.style.width = '200px'
          el.classList.add('wlk')
          el.classList.add('statusCard')
          el.classList.add('net-card')
          el.style.position = 'relative'
          el.style.padding = "6px 8px 8px 8px"
          el.style.fontSize = '.7rem'
          el.style.boxSizing = 'border-box'
          el.style.height = '60px'
          el.onclick = () => {
            createToast(`${op.replace('‰∏≠ÂõΩ', name)}Âç°Âè∑:${cardNumber}`)
          }
          const used = (Number(usedData) / 1024).toFixed(2)
          const total = (Number(totalData) / 1024).toFixed(2)
          el.innerHTML = `
    ÊúâÊïàÊúü:${expireDate.split(' ')[0]}<br/>
    ${(Number(usedData) / 1024).toFixed(2)}GB/${(Number(totalData) / 1024).toFixed(2)}GB
    ${kano_parseSignalBar(((used / total) * 100).toFixed(2), 0, 100, 90, 60, { g: 'red', o: 'orange', r: 'var(--dark-btn-color-active)' })}
    `
          el_title.innerHTML = op.replace('‰∏≠ÂõΩ', name)
          el.appendChild(el_title)
          isDisabled && el.appendChild(mask)
          netCard?.parentElement?.appendChild(el)
        })
    }
  })()
</script>
<style>
  .statusCard {
    box-sizing: border-box
  }

  .wlk {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .wlk .signal_bar {
    width: 100%;
    margin-top: 0.1rem;
    box-sizing: border-box;
  }

  .wlk .signal_bar .text::after {
    content: " %";
  }

  @media (max-width: 650px) {
    .wlk {
      margin-left: 3px !important;
      margin-right: 3px !important;
    }
  }
</style>